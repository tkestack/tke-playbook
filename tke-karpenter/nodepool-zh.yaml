apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: test  # NodePool名称，自定义（如"prod-business"）
  annotations:
    kubernetes.io/description: "NodePool to restrict the number of cpus provisioned to 10"  # 描述信息
spec:
  # 1. 节点中断与生命周期管理（disruption）
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized  # 缩容策略
    consolidateAfter: 5m  # 缩容延迟（等待5分钟确认低负载后再缩容）
    budgets:  # 缩容预算（控制缩容速率，避免业务中断）
    - nodes: 10%  # 允许同时缩容不超过10%的节点
  # 2. 节点创建约束模板（template）
  template:
    spec:
      # 2.1 节点属性约束（requirements）：动态匹配符合条件的机型/可用区
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]  # 实例架构（仅支持amd64）
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]  # 操作系统（仅支持linux）
        - key: karpenter.k8s.tke/instance-family
          operator: In
          values: ["S5","SA2"]  # 机型实例族（如S5通用型、SA2计算型）
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]  # 计费模式（仅支持按量计费"on-demand"）
        - key: "karpenter.k8s.tke/instance-cpu"
          operator: Gt
          values: ["1"]  # 实例CPU数量（Gt=大于，此处要求CPU>1核）
      # 2.2 关联节点配置模板（TKEMachineNodeClass）
      nodeClassRef:
        group: karpenter.k8s.tke
        kind: TKEMachineNodeClass
        name: default  # 关联的TKEMachineNodeClass名称（需与实际创建的一致）
  # 3. 节点池资源上限（limits）：防止无限扩容
  limits:
    cpu: 10  # 该NodePool下所有节点的CPU总上限（如10核）